@page
@model SmartSqlEditor.Pages.SqlEditorModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SqlEditor</title>
    <link href="~/lib/codemirror/theme/ambiance.min.css" rel="stylesheet" />
    <link href="~/lib/codemirror/codemirror.min.css" rel="stylesheet" />
    <link href="~/lib/codemirror/addon/hint/show-hint.min.css" rel="stylesheet" />
    <link href="~/lib/element-ui/theme-chalk/index.css" rel="stylesheet" />
    <link href="~/lib/codemirror/theme/idea.min.css" rel="stylesheet" />
    <script src="~/lib/codemirror/codemirror.min.js"></script>
    <script src="~/lib/vue/vue.min.js"></script>
    <script src="~/lib/element-ui/index.js"></script>
    <script src="~/lib/codemirror/addon/edit/matchbrackets.min.js"></script>
    <script src="~/lib/codemirror/addon/edit/trailingspace.min.js"></script>
    <script src="~/lib/codemirror/addon/selection/active-line.min.js"></script>
    <script src="~/lib/codemirror/mode/sql/sql.min.js"></script>
    <script src="~/lib/codemirror/addon/hint/show-hint.min.js"></script>
    <script src="~/lib/codemirror/addon/hint/sql-hint.min.js"></script>
    <script src="~/lib/axios/axios.min.js"></script>
    <style type="text/css">
        body{margin:5px;padding:0;}
        .CodeMirror.cm-s-idea{border:1px solid #eee;}
        .el-card__body{padding:8px 0 0;}
        .el-card__header{padding:8px 12px;}
        .sse-toolbar{padding:0 12px; margin-bottom:8px;}
    </style>
</head>
<body>
    <div id="app">
        <el-card class="box-card">
            <div slot="header" class="clearfix">
                <span>在线SQL编辑器</span>
            </div>
            <div class="sse-toolbar">
                <el-tooltip class="item" effect="dark" content="执行编辑器中的SQL语句" placement="bottom">
                    <el-button type="success" icon="el-icon-caret-right" @@click="handleExecuteSQL" size="mini">执 行</el-button>
                </el-tooltip>
                <el-tooltip class="item" effect="dark" content="验证SQL语句的正确性" placement="bottom">
                    <el-button type="primary" icon="el-icon-check" size="mini" @@click="handleValidateSQL">代码检查</el-button>
                </el-tooltip>
                <el-tooltip class="item" effect="dark" content="清空编辑器中的SQL语句" placement="bottom">
                    <el-button type="danger" icon="el-icon-delete" size="mini" @@click="handleClearCode">清空语句</el-button>
                </el-tooltip>
            </div>
            <div class="cm-editor-box">
                <textarea ref="mycode" class="codesql" v-model="code" style="height:200px;width:600px;"></textarea>
            </div>
        </el-card>
    </div>
    <script type="text/javascript">

        /*
        *  {
            users: ['name', 'score', 'birthDate'],
            countries: ['name', 'population', 'size'],
            EPC_Base_Notify: ["Id_Bigint", "GroupId_Int"]
        }
         */
        var vm = new Vue({
            el: "#app",
            data: {
                code: "",
                tables: { },
                editor: null
            },
            mounted() {
                this.loadColums();
            },
            methods: {
                loadColums: function () {
                    var target = this;
                    axios.get("/api/database/FindColumns")
                        .then(res => {
                            target.tables = res.data;
                            target.initEditor();
                        });
                },
                initEditor: function () {
                    var scope = this;
                    let mime = 'text/x-mssql'
                    let theme = 'idea'//设置主题，不设置的会使用默认主题
                    this.editor = CodeMirror.fromTextArea(this.$refs.mycode, {
                        mode: mime,//选择对应代码编辑器的语言，我这边选的是数据库，根据个人情况自行设置即可
                        theme: theme,
                        indentWithTabs: true,
                        smartIndent: true,
                        lineNumbers: true,
                        matchBrackets: true,
                        autoRefresh: true,
                        hint: CodeMirror.hint.sql,
                        option: {
                            autofocus: true
                        },
                        autofocus: true,
                        extraKeys: { 'Ctrl': 'autocomplete' },//自定义快捷键
                        hintOptions: {//自定义提示选项
                            tables: scope.tables
                        }
                    })
                    //editor.setValue("select * from t_test_login where 1=1");

                    this.editor.on("keyup", function (cm, event) {
                        if (!cm.state.completionActive &&   /*Enables keyboard navigation in autocomplete list*/
                            event.keyCode > 64 && event.keyCode < 91) {// only when a letter key is pressed
                            CodeMirror.commands.autocomplete(cm, null, { completeSingle: false });
                        }
                    });

                    this.editor.on('change', function (cm) {
                        scope.code = cm.getValue();
                    });
                },
                handleExecuteSQL: function () {
                    this.$message.warning("功能暂未实现");
                },
                handleValidateSQL: function () {
                    this.$message.warning("功能暂未实现");
                },
                handleClearCode: function () {
                    this.editor.setValue("");
                }
            }
        });
    </script>
</body>
</html>
